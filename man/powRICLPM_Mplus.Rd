% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/powRICLPM.R
\name{powRICLPM_Mplus}
\alias{powRICLPM_Mplus}
\title{Create Mplus xyntax for RI-CLPM power analysis}
\usage{
powRICLPM_Mplus(
  search_lower = NULL,
  search_upper = NULL,
  search_step = 20,
  sample_size = NULL,
  time_points,
  ICC,
  RI_cor,
  Phi,
  wSigma,
  reps = 1000,
  seed = NA,
  save_path = getwd(),
  constraints = NULL
)
}
\arguments{
\item{search_lower}{A positive integer, denoting the lower bound of the range of sample sizes.}

\item{search_upper}{A positive integer, denoting the upper bound of the range of sample sizes.}

\item{search_step}{A positive integer, denoting the increment in sample size.}

\item{sample_size}{An integer (vector) with elements at least larger than 20 (i.e., the number of free parameters in a basic bivariate RI-CLPM with 3 repeated measures), indicating the sample sizes at which to evaluate power. This argument can be specified as an alternative to the `search_` arguments to denote specific sample sizes, rather than an entire range.}

\item{time_points}{An integer (vector) with elements larger than 3, indicating number of time points.}

\item{ICC}{A `double` denoting the proportion of variance at the between-unit level.}

\item{RI_cor}{A `double` denoting the correlation between random intercepts.}

\item{Phi}{A matrix of standardized autoregressive and cross-lagged effects in the population. Columns represent predictors and rows represent outcomes.}

\item{wSigma}{A correlation matrix for the within-unit components.}

\item{reps}{A positive `integer` denoting the number of Monte Carlo replications to be used during simulations.}

\item{seed}{An `integer` of length 1. If multiple cores are used, a seed of length 1 will be used to generate a full L'Ecuyer-CMRG seed for all cores. For more information, see \code{\link[furrr]{furrr_options}}.}

\item{save_path}{A character string naming the directory to save any (data) files to.}

\item{constraints}{A character string specifying the RI-CLPM parameters that should be constrained over time in the estimation model. "\code{lagged}" refers to both cross-lagged and autoregressive effects, "\code{residuals}" refers to the residual variances, "\code{within}" refers to both lagged effects and residual variances, and "\code{stationarity}" imposes stationarity constraints on the lagged effects and residual variances. By default, the lagged effects and residual variances are allowed to vary freely over time.}
}
\description{
\code{powRICLPM_Mplus()} creates and saves syntax for performing a Monte Carlo power analysis for the random intercept cross-lagged panel model (RI-CLPM) in Mplus. It can create Mplus model syntax across multiple experimental conditions simultaneously. Conditions can vary in terms of sample size, number of time points, and proportion of between-unit variance. See "Details" for information on the naming conventions of parameters.
}
\details{
\subsection{Syntax generation}{Mplus model syntax is created in multiple steps: First, the \code{MODEL POPULATION} command syntax is created in which parameters are constrained to population values. Second, the \code{MODEL} command syntax is created for model estimation. Optionally, if the user wants to impose constraints over time for the estimation model, the \code{MODEL CONSTRAINTS} command syntax is created for model estimation. Ultimately, the parameter tables are combined to form character vectors containing the Mplus syntax to be exported.}

\subsection{Naming conventions}{Details on the naming conventions can be found in the "Details" section of \code{\link{powRICLPM}}.}
}
\examples{
# Example - Create Mplus syntax to simulate power across range of sample sizes
# Define population parameters for lagged effects and within-component correlations
Phi <- matrix(c(.4, .1, .2, .3), ncol = 2, byrow = TRUE)
wSigma <- matrix(c(1, .3, .3, 1), ncol = 2, byrow = TRUE)

# Create and save Mplus model syntax
\dontrun{
powRICLPM_Mplus(
  search_lower = 500,
  search_upper = 1000,
  search_step = 100,
  time_points = c(3, 4),
  ICC = c(0.4, 0.5, 0.6),
  RI_cor = 0.3,
  Phi = Phi,
  wSigma = wSigma,
  reps = 10000,
  seed = 123456
)
}
}
