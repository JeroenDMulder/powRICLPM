[{"path":"https://jeroendmulder.github.io/powRICLPM/articles/extensions.html","id":"bounded-estimation-with-lavaan","dir":"Articles","previous_headings":"","what":"Bounded estimation with lavaan","title":"Extensions","text":"prevent non-convergence small sample sizes (say, less 100), bounds can imposed parameter space estimation model using bounds = TRUE (De Jonckere Rosseel 2022). can aid optimization algorithm find unique solutions prevents searching completely wrong direction one, multiple parameters. Sensible lower bounds involve (residual) variances latent variables (e.g., random intercept variances), negative variances theoretically possible. Upper bound variances determined based observed variances variable. context RI-CLPM, factor loadings (usually) fixed, hence parameters estimated. lagged effects theoretically infinite, hence sensible bounds can place à priori parameters. use bounded estimation theoretically appealing models known convergence issues, stable trait autoregressive trait state (STARTS) model. Special Topics vignette Measurement Error uses powRICLPM package explore impact unmodeled measurement error RI-CLPM, use bounded estimation aid convergence STARTS model.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/extensions.html","id":"constraints-over-time","dir":"Articles","previous_headings":"","what":"Constraints over time","title":"Extensions","text":"powRICLPM() offers users option impose various constraints time estimation model constraints argument. statistical advantages constraints time reduce model complexity, thereby potentially reducing convergence issues increasing power. Moreover, researchers interested called ‘stationarity’ constraints theoretical reasons. disadvantage constraints assume certain parameters time-invariant. might assumption researchers willing make, especially developmental contexts expect lagged effects might change time (e.g., variable wA gets important driving wB one gets older). Therefore, default constraints = \"none\", implying lagged effects, within-components (residual) variances covariances freely estimated time. Constraint options include: constraints = \"lagged\": Autoregressive cross-lagged effects constrained equal time. constraints = \"residuals: Within-unit residual variances covariance (wave 2 onward) constrained equal time. constraints = \"within\": lagged effects residual variances covariances constrained equal time. constraints = \"stationary\": Constraints imposed variances within-components first wave, residual variances wave 2 , variances within-components 1. implies variances first wave fixed 1, residual variances function lagged effects, correlation within-components wave. constraints deduced supplementary materials Mulder Hamaker (2021), see FAQ “can constrain standardized parameters invariant time?”. constraints = \"\": Constraints imposed measurement error variances across time (separately variable). constraint possible estimate_ME = TRUE.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/extensions.html","id":"measurement-error","dir":"Articles","previous_headings":"","what":"Measurement error","title":"Extensions","text":"generally advisable include measurement error analyzing psychological data, RI-CLPM include . Adding measurement error model result bivariate STARTS model Kenny Zautra (2001), requires least 4 waves data identified. Users can add measurement error variances estimation model specifying estimate_ME = TRUE. Measurement error can added simulated data using reliability argument. Note, however, STARTS model shown prone empirical -identification, often requiring upwards 8 waves data sample sizes larger 500. Special Topics vignette Measurement Error uses powRICLPM package explore impact unmodeled measurement error RI-CLPM, use bounded estimation aid convergence STARTS model.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/extensions.html","id":"data-with-skewness-and-kurtosis","dir":"Articles","previous_headings":"","what":"Data with skewness and kurtosis","title":"Extensions","text":"Asymmetry empirical distributions psychometric measurements rather common (Micceri 1989), can impact power SEM models assume normally distributed variables. powRICLPM package allows researchers investigate power asymmetrically distributed data setting values skewness kurtosis arguments (default: 0). example, suppose reason believe AA BB variables positively skewed, heavy tails (.e., higher kurtosis) can include arguments skewness = 1 kurtosis = 0.5. skewness kurtosis arguments set values 0, powRICLPM package defaults using robust maximum likelihood (estimator = \"MLR\").","code":""},{"path":[]},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/FAQ.html","id":"ri-clpm-extensions","dir":"Articles","previous_headings":"","what":"RI-CLPM extensions","title":"FAQ","text":"run power analysis RI-CLPM multiple indicators? Unfortunately, powRICLPM package functionality (yet) include multiple indicator extensions RI-CLPM. However, one can use Mplus’s Monte Carlo functionalities specify multiple indicator RI-CLPMs (MI-RICLPM) simulate power. Furthermore, general comments made effect including multiple indicators power. example, Oertzen et al. (2010) claim separation measurement error true score variance increases power, principle generalizes structural equation models, regardless regression model linking latent variables. implies MI-RICLPM’s power basic RI-CLPM. verify , small simulation study performed using Mplus (model syntax simulations can found GitHub). 10,000 datasets generated MI-RICLPM latent factor per occasion three indicators. factors contain trait-like part captured higher-order random intercepts, state-like part used capture dynamics time (see bottom panel Figure 3 Mulder Hamaker (2021)). factor loadings linking indicators latent factor set 1, measurement error variances set 0.5, cross-lagged effects fixed 0.2. population parameter values kept illustrative example Mulder (review), implying proportion measurement error observed variables 20%20\\%. simulated data sets analyzed using MI-RICLPM generated data (separates measurement error variance), basic RI-CLPM (assuming measurement error, using first indicator). Results show power detect non-zero lagged effects indeed larger MI-RICLPM (ranging 0.89 0.93 standardized cross-lagged effects 0.2, 0.927 0.939 standardized autoregressive effects 0.3) basic RI-CLPM (ranging 0.70 0.74 standardized cross-lagged effects 0.2, 0.807 0.827 standardized autoregressive effects 0.3). , inclusion multiple indicators complicates RI-CLPM power analysis, can generally stated separation measurement error true score variance extension multiple indicators beneficial power detect lagged effects. measurements, especially social behavioral sciences prone include measurement error, extension may well-worth considering power point--view. run power analysis multiple group RI-CLPM? multiple group RI-CLPM based fitting multiple group version RI-CLPM without constraints across groups (e.g., constraint equal lagged effects), comparing model fit determine whether imposed constraints tenable. Power thus refers probability rejecting bad-fitting model due untenable across-group constraints context, rather rejecting null-hypothesis specific parameter. effect size refers much worse constrained model fits data compared general model (less, across-group constraints). Analytic solutions, like likelihood ratio test Satorra Saris (1985) power analyses based RMSEA MacCallum, Browne, Sugawara (1996), efficient use types power analyses computationally intensive Monte Carlo simulation studies. See, example, SSpower() function R-package semTools multiple group SEM power analysis Jak et al. (2020), Jorgensen et al. (2021). Can run power analysis tri- -variate RI-CLPM? Unfortunately, powRICLPM currently performs power analyses bivariate RI-CLPM. plans extend functionality package include tri- -variate models, work likely start sometime summer 2023. One issues needs tackled going -variate version model, becomes increasingly difficult specify population parameter values combined allow simulate data . related first limitation mentioned Mulder (2023), see Section 6.1.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/FAQ.html","id":"post-hoc-power-analysis","dir":"Articles","previous_headings":"","what":"Post hoc power analysis","title":"FAQ","text":"can posthoc power analysis using powRICLPM? …","code":""},{"path":[]},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/introduction.html","id":"step-1-determine-experimental-conditions","dir":"Articles","previous_headings":"","what":"Step 1: Determine experimental conditions","title":"Get Started","text":"performing power analysis, must first determine experimental conditions interest. Experimental conditions (: simulation conditions) defined characteristics study design can impact statistical power. includes, among others, characteristics like sample size number repeated measures. Decide number repeated measures used simulations, well range sample sizes want simulate power. example, take sample size range 100 1000 first, increasing steps 100. Let numbers repeated measures range 3 5. experimental conditions lead desired amount power detecting small cross-lagged effect, ranges can extended later.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/introduction.html","id":"step-2-choose-population-parameter-values","dir":"Articles","previous_headings":"","what":"Step 2: Choose population parameter values","title":"Get Started","text":"Next, determine population parameter values generating data RI-CLPM. requires specification : Phi: Standardized autoregressive cross-lagged effects within-unit components model. values collected matrix, columns representing predictors rows representing outcomes. within_cor: correlation within-unit components. ICC: proportion variance -unit level (relative total variance). RI_cor: correlation random intercepts. example, parameter values set : unsure specified Phi matrix intended, can use check_Phi() function give summary effects Phi interpreted.","code":"Phi <- matrix(c(.4, .1, .2, .3), ncol = 2, byrow = T) # The .2 refers to our standardized cross-lagged effect of interest within_cor <- 0.3 ICC <- 0.5 RI_cor <- 0.3 library(powRICLPM) # Check `Phi` argument check_Phi(Phi) ## According to this `Phi`, the lagged effects are: ## • Autoregressive effect of A: 0.4 ## • Autoregressive effect of B: 0.3 ## • Cross-lagged effect of A -> B: 0.2 ## • Cross-lagged effect of B -> A: 0.1"},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/introduction.html","id":"steps-3-5-perform-the-power-analysis","dir":"Articles","previous_headings":"","what":"Steps 3-5: Perform the power analysis","title":"Get Started","text":"Steps 3 5 automated powRICLPM() function. input, must provide: desired power level using target_power argument, range sample sizes simulate power using search_lower, search_upper, search_step arguments (alternatively, can specify directly providing vector sample sizes sample_size argument), number time points simulated data using time_points argument, population values Phi, within_cor, ICC, RI_cor, number Monte Carlo replications want perform per experimental condition reps argument. can optionally specify: alpha: numeric value denoting significance criterion (default: 0.05). seed: integer control starting point random number generator. important use want replicate results. seed specified, random seed generated reported back . Options extend basic power analysis setup described Vignette Extensions Now, can perform power analysis running:","code":"# Set number of replications  n_reps <- 100  output <- powRICLPM(   target_power = 0.8,   search_lower = 500,   search_upper = 1000,   search_step = 50,   time_points = c(3, 4),   ICC = ICC,   RI_cor = RI_cor,    Phi = Phi,   within_cor = 0.3,   reps = n_reps )"},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/introduction.html","id":"parallel-processing-using-future","dir":"Articles","previous_headings":"Steps 3-5: Perform the power analysis","what":"Parallel processing using future","title":"Get Started","text":"Performing Monte Carlo power analysis large number replications, across multiple experimental conditions can time-consuming. speed process, recommended perform power analysis across simulation conditions parallel (.e., multiple cores). end, powRICLPM() function implemented future’s parallel processing capabilities. Load future package, use plan() function change power analysis execution sequential (.e., single-core, default), multisession (.e., multicore). Use workers argument specify many cores want use. Next, run powRICLPM analysis, power analysis run specified number cores. can result significant reduction computing time. information parallel execution strategies using futures, see ?future::plan().","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/introduction.html","id":"progress-bar-using-progressr","dir":"Articles","previous_headings":"Steps 3-5: Perform the power analysis","what":"Progress bar using progressr","title":"Get Started","text":"can useful get approximation progress powRICLPM analysis running code, especially running analysis parallel. powRICLPM() implemented progress notifications using progressr package. Simply put, two options can get progress notifications: can subscribe progress updates specific expression wrapping expression with_progress({...}). can subscribe progress updates everywhere running handlers(global = T). Implementing with_progress({...}) option, well parallel execution powRICLPM analysis, results code example: information progress notification options using progressr end-users, including auditory email updates, see https://progressr.futureverse.org.","code":"# Load `future` and `progressr` packages library(future) library(progressr)  # Check how many cores are available future::availableCores()  # Plan powRICLPM analysis to run on 1 core less than number of available cores plan(multisession, workers = 7) # For the case of 8 available cores  # Run the powRICLPM analysis  with_progress({ # Subscribe to progress updates   output <- powRICLPM(     target_power = 0.8,     search_lower = 500,     search_upper = 1000,     search_step = 50,     time_points = c(3, 4),     ICC = ICC,     RI_cor = RI_cor,      Phi = Phi,     within_cor = 0.3,     reps = n_reps   ) })  # Revert back to sequential execution of code  plan(sequential)"},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/introduction.html","id":"step-6-summarize-results","dir":"Articles","previous_headings":"","what":"Step 6: Summarize results","title":"Get Started","text":"powRICLPM() function creates powRICLPM object: list results, upon can call print(), summary(), give(), plot() functions print, summarize, extract results, visualize results, respectively. print() outputs textual summary power analysis design contained within object called upon. output performance metrics computed power analysis. summary() can used one four ways. First, summary can used simply like print() get information design power analysis (different experimental conditions), well number problems occurred per condition (e.g., non-convergence, fatal estimation errors, inadmissible results). Second, specifying parameter = \"...\" argument summary(), function print results specifically parameter across experimental conditions. Third, specify specific experimental condition using summary()’s sample_size, time_points, ICC arguments, performance measures outputted parameters experimental condition. give() extracts various bits information powRICLPM object. exact information extracted given = \"...\" argument: = \"conditions\" gives different experimental conditions per row, condition defined unique combination sample size, number time points ICC. = \"estimation_problems\" gives proportion fatal errors, inadmissible values, non-converged estimations (columns) per experimental conditions (row). = \"results\" gives average estimate average, minimum estimate minimum, standard deviation parameter estimates SD, average standard error SEavg, mean square error MSE, average width confidence interval accuracy, coverage rate coverage, proportion times p-value lower significance criterion power. requires setting parameter = \"...\" argument. = \"names\" gives parameter names contained within powRICLPM object. Finally, plot() creates ggplot2-plot specific parameter (specified using parameter = \"...\" argument) sample size x-axis, simulated power y-axis, lines grouped number time-points, plots wrapped proportion -unit variance. plot() returns ggplot2 object can fully customized using ggplot2 functionality. example, can change scales, add titles, change geoms, etc. information options ggplot2 framework can found https://ggplot2-book.org/index.html. example, add title change labels x-axis:","code":"# Summary of study design summary(output)  # Summary of results for a specific parameter, across simulation conditions summary(output, parameter = \"wB2~wA1\")  # Summary of all parameter for a specific simulation condition summary(output, sample_size = 500, time_points = 4, ICC = 0.5, reliability = 1) # Extract experimental conditions give(output, what = \"conditions\")  # Extract estimation problems give(output, what = \"estimation_problems\")  # Extract results for cross-lagged effect \"wB2~wA1\"  give(output, what = \"results\", parameter = \"wB2~wA1\")  # Extract parameter names give(output, what = \"names\") # Create basic plot of powRICLPM object p <- plot(output, parameter = \"wB2~wA1\") p  # Adjust plot aesthetics p2 <- p +    ggplot2::labs(     title = \"Power analysis for RI-CLPM\",     caption = paste0(\"Based on \", n_reps, \" replications.\")   ) +   ggplot2::scale_color_discrete(\"Time points\") +    ggplot2::guides(     color = ggplot2::guide_legend(title = \"Time points\", nrow = 1),     shape = ggplot2::guide_legend(title = \"Reliability\", nrow = 1),      fill = \"none\"   ) +    ggplot2::scale_x_continuous(     name = \"Sample size\",     breaks = seq(500, 1000, 50),     guide = ggplot2::guide_axis(n.dodge = 2)   ) p2"},{"path":[]},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/measurement_error.html","id":"impact-of-unmodeled-measurement-error","dir":"Articles","previous_headings":"","what":"Impact of Unmodeled Measurement Error","title":"Measurement Error","text":"preparation.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/mplus.html","id":"steps-1-and-2-experimental-conditions-and-population-parameter-values","dir":"Articles","previous_headings":"","what":"Steps 1 and 2: Experimental conditions and population parameter values","title":"Using Mplus","text":"example, investigate power detect small standardized cross-lagged effect 0.20.2 sample sizes 100 1000 (incremental steps 50) RI-CLPM 3, 4 5 repeated measures. total, results 19×3=5719 \\times 3 = 57 experimental conditions. Moreover, following example Get started Vignette, population parameter values :","code":"Phi <- matrix(c(.4, .1, .2, .3), ncol = 2, byrow = T)  # The .2 refers to our standardized cross-lagged effect of interest ICC <- 0.5 RI_cor <- 0.3"},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/mplus.html","id":"steps-3-5-perform-the-power-analysis","dir":"Articles","previous_headings":"","what":"Steps 3-5: Perform the power analysis","title":"Using Mplus","text":"create Mplus model syntax, use powRICLPM() function, set software = \"Mplus\". must provide: range sample sizes simulate power using search_lower, search_upper, search_step arguments, number repeated measures using time_points argument, population values Phi, wSigma, ICC, RI_cor, number MCMC replications want perform per condition reps argument, seed control starting point random number generator, save_path, denoting directory save Mplus input file . example, specify: Optionally, can extend power analysis described Vignette Extensions. Note possible generate skewed kurtosed data Mplus via powRICLPM package. Furthermore, bounded estimation available Mplus. Therefore, skewness, kurtosis, bounds ignored software = \"Mplus\". powRICLPM() creates Mplus input file (multiple files multiple experimental conditions specified) writes specified directory. file contains Mplus model syntax needed run power analysis RI-CLPM Mplus. information Monte Carlo simulations Mplus can found http://statmodel.com/download/usersguide/Chapter12.pdf.","code":"powRICLPM_(   search_lower = 100,   search_upper = 1000,   search_step = 50,   time_points = c(3, 4, 5),   ICC = 0.5,   RI_cor = 0.3,   Phi = Phi,   within_cor = 0.3,   reps = 10000,   seed = 123456,   save_path = \"./saved\"   software = \"Mplus\" )"},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/mplus.html","id":"step-6-summarize-results","dir":"Articles","previous_headings":"","what":"Step 6: Summarize results","title":"Using Mplus","text":"get output, run Mplus model syntax file Mplus. time, output file created summarizing results Mplus power analysis. good source interpreting output context MONTECARLO study Muthén Muthén (2002).","code":""},{"path":[]},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/mulder_power_2023.html","id":"preliminary-analysis","dir":"Articles","previous_headings":"","what":"Preliminary analysis","title":"Online Supplementary Materials Mulder (2023)","text":"First, Monte Carlo power analysis performed 171 experimental conditions using limited number replications (reps = 100). preliminary results serve basis selecting experimental conditions show promising results (.e., meet desired power- accuracy levels). conditions validated using large number replications (reps = 2000) next step. R-code preliminary analysis can found :","code":"# Matrix of standardized lagged effects Phi <- matrix(c(0.20, 0.10, 0.15, 0.30), byrow = FALSE, ncol = 2) # powRICLPM automatically computes Psi based on Phi and within_cor  # Setup parallel processing to speed up computations plan(multisession, workers = 6)  # Perform preliminary power analysis (with progress bar) with_progress({   out_preliminary <- powRICLPM(     target_power = 0.8,     search_lower = 200,     search_upper = 2000,     search_step = 100,     time_points = c(3, 4, 5),     ICC = c(0.3, 0.5, 0.7),     RI_cor = 0.35,     Phi = Phi,     within_cor = 0.26,     reps = 5,     seed = 123456   ) })  # Tabular summary of results summary(out_preliminary) summary(out_preliminary, sample_size = 200, time_points = 3, ICC = 0.3, reliability = 1) res_wB2wA1 <- give(out_preliminary, what = \"results\", parameter = \"wB2~wA1\")  # Visualize power p <- plot(x = out_preliminary, parameter = \"wB2~wA1\")  # Tailor visualization for Mulder (under review) p <- p +   labs(color = \"Number of time points\") +   scale_x_continuous(     name = \"Sample size\",     breaks = seq(200, 2000, 200),     guide = guide_axis(n.dodge = 2)   ) +   ggplot2::ylab(\"Power\") +    ggplot2::guides(     color = ggplot2::guide_legend(title = \"Time points\", nrow = 1),     shape = ggplot2::guide_legend(title = \"Reliability\", nrow = 1),      fill = \"none\"   ) +   theme(legend.position = \"bottom\", text = element_text(size = 8)) p ggsave(\"C:\\\\Users\\\\5879167\\\\surfdrive\\\\Research\\\\RICLPM - Power\\\\Mulder2023_preliminary_power.png\", plot = p, height = 6, width = 7)"},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/mulder_power_2023.html","id":"validation","dir":"Articles","previous_headings":"","what":"Validation","title":"Online Supplementary Materials Mulder (2023)","text":"preliminary results suggest least 4 time-points sample size upwards 1000 required condition advantageous proportion -unit variance (proportion -unit variance 0.3). conditions 0.7 proportion -unit variance, sample sizes approximately 1500 needed 5 repeated measures, whereas sample sizes upwards 1700 needed 4 repeated measures. Based results, following experimental conditions validation selected: range sample sizes reduced 900 1800, experimental conditions 3 repeated measures omitted. results total 10 sample sizes ×\\times 2 numbers repeated measures ×\\times 3 proportions -unit variance, totaling 60 experimental conditions validation.","code":"# Setup parallel processing to speed up computations plan(multisession, workers = 6)  # Perform preliminary power analysis (with progress bar) with_progress({   out_validation <- powRICLPM(     target_power = 0.8,     search_lower = 900,     search_upper = 1800,     search_step = 100,     time_points = c(4, 5),     ICC = c(0.3, 0.5, 0.7),     RI_cor = 0.35,      Phi = Phi,     within_cor = 0.26,     reps = 2000,      seed = 123456   ) })  # Tabular summary of results summary(out_validation, parameter = \"wB2~wA1\") res_wB2wA1 <- give(out_validation, what = \"results\", parameter = \"wB2~wA1\")  # Visualize power p2 <- plot(out_validation, parameter = \"wB2~wA1\")  # Tailor visualization of power for Mulder (2022) p2 <- p2 +    labs(color = \"Number of time points\") +   scale_x_continuous(     name = \"Sample size\",     breaks = seq(900, 1800, 100),     guide = guide_axis(n.dodge = 2)) +   scale_color_manual(values = c(\"#00BA38\", \"#619CFF\")) +   theme(legend.position = \"bottom\", text = element_text(size = 8)) p2 ggsave(\"Mulder2022_validation_power.png\", height = 5, width = 7)"},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/powRICLPM.html","id":"step-1-determine-experimental-conditions","dir":"Articles","previous_headings":"","what":"Step 1: Determine experimental conditions","title":"Get started","text":"performing power analysis, must first determine experimental conditions interest. Experimental conditions (: simulation conditions) defined characteristics study design can impact statistical power. includes, among others, characteristics like sample size number repeated measures. Decide number repeated measures used simulations, well range sample sizes want simulate power. example, take sample size range 100 1000 first, increasing steps 100. Let numbers repeated measures range 3 5. experimental conditions lead desired amount power detecting small cross-lagged effect, ranges can extended later.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/powRICLPM.html","id":"step-2-choose-population-parameter-values","dir":"Articles","previous_headings":"","what":"Step 2: Choose population parameter values","title":"Get started","text":"Next, determine population parameter values generating data RI-CLPM. requires specification : Phi: Standardized autoregressive cross-lagged effects within-unit components model. values collected matrix, columns representing predictors rows representing outcomes. within_cor: correlation within-unit components. ICC: proportion variance -unit level (relative total variance). RI_cor: correlation random intercepts. example, parameter values set : unsure specified Phi matrix intended, can use check_Phi() function give summary effects Phi interpreted.","code":"Phi <- matrix(c(.4, .1, .2, .3), ncol = 2, byrow = T) # The .2 refers to our standardized cross-lagged effect of interest within_cor <- 0.3 ICC <- 0.5 RI_cor <- 0.3"},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/powRICLPM.html","id":"steps-3-5-perform-the-power-analysis","dir":"Articles","previous_headings":"","what":"Steps 3-5: Perform the power analysis","title":"Get started","text":"Steps 3 5 automated powRICLPM() function. input, must provide: desired power level using target_power argument, range sample sizes simulate power using search_lower, search_upper, search_step arguments (alternatively, can specify directly providing vector sample sizes sample_size argument), number time points simulated data using time_points argument, population values Phi, within_cor, ICC, RI_cor, number Monte Carlo replications want perform per experimental condition reps argument. Optionally, can specify: skewness kurtosis: integer (vector) determines skewness kurtosis simulated observed variables, respectively. Suppose reason believe \\(\\) \\(B\\) variables positively skewed, heavy tails (.e., higher kurtosis) can include arguments skewness = 1 kurtosis = 0.5 (default: 0). alpha: numeric value denoting significance criterion (default: 0.05). seed: integer control starting point random number generator. important use want replicate results. reliability: numeric value representing reliability indicators (.e., proportion true score variance) (default: 1). bootstrap_reps: numeric value, denoting number bootstrap replications used simulate uncertainty around power analysis results (default: 1000). estimator: character string, denoting estimator used estimating models (default: “ML”; skewness /kurtosis values set nonzero values, defaults “MLR”). constraints, bounds, estimate_ME arguments can set well extend basic power analysis setup. options described Vignette Extensions. example, can perform power analysis running:","code":"output <- powRICLPM(   target_power = 0.8,   search_lower = 100,   search_upper = 1000,   search_step = 50,   time_points = c(3, 4, 5),   ICC = ICC,   RI_cor = RI_cor,    Phi = Phi,   within_cor = 0.3,   reps = 1000 )"},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/powRICLPM.html","id":"parallel-processing-using-furrr","dir":"Articles","previous_headings":"Steps 3-5: Perform the power analysis","what":"Parallel processing using furrr","title":"Get started","text":"Performing Monte Carlo power analysis large number replications, across multiple simulation conditions can time-consuming. speed process, recommended perform power analysis across simulation conditions parallel (.e., multiple cores). powRICLPM() function implemented future’s parallel processing capabilities using furrr package. Load furrr package, use plan() function change power analysis execution sequential (.e., single-core, default), multisession (.e., multicore). Use workers argument specify many cores want use. Next, run powRICLPM analysis, power analysis run specified number cores. can result significant reduction computing time. information parallel execution strategies, see ?furrr::plan().","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/powRICLPM.html","id":"progress-bar-using-progressr","dir":"Articles","previous_headings":"Steps 3-5: Perform the power analysis","what":"Progress bar using progressr","title":"Get started","text":"can useful get approximation progress powRICLPM analysis running code, especially running analysis parallel. powRICLPM() implemented progress notifications using progressr package. Simply put, two options can get progress notifications: can subscribe progress updates specific expression wrapping expression with_progress({...}). can subscribe progress updates everywhere running handlers(global = T). second option fully developed yet furrr package, instead focus first. Implementing with_progress({...}) option, well parallel execution powRICLPM analysis, results code example: information progress notification options using progressr end-users, including auditory email updates, see https://progressr.futureverse.org.","code":"# Load the furrr and progressr packages library(furrr) library(progressr)  # Check how many cores are available future::availableCores()  # Plan powRICLPM analysis to run on 1 core less than number of available cores plan(multisession, workers = 7) # For the case of 8 available cores  # Run the powRICLPM analysis  with_progress({ # Subscribe to progress updates   output <- powRICLPM(     target_power = 0.8,     search_lower = 100,     search_upper = 1000,     search_step = 50,     time_points = c(3, 4, 5),     ICC = ICC,     RI_cor = RI_cor,      Phi = Phi,     within_cor = 0.3,     reps = 1000   ) })  # Revert back to sequential execution of code  plan(sequential)"},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/powRICLPM.html","id":"step-6-summarize-results","dir":"Articles","previous_headings":"","what":"Step 6: Summarize results","title":"Get started","text":"powRICLPM() function creates powRICLPM object: list results, upon can call print(), summary(), give(), plot() functions print, summarize, extract results, visualize results, respectively. print() outputs textual summary power analysis design contained within object called upon. output performance metrics computed power analysis. summary() can used one four ways. First, summary can used simply like print() get information design power analysis (different experimental conditions), well number problems occurred per condition (e.g., non-convergence, fatal estimation errors, inadmissible results). Second, specifying parameter = \"...\" argument summary(), function print results specifically parameter across experimental conditions. Third, specify specific experimental condition using summary()’s sample_size, time_points, ICC arguments, performance measures outputted parameters experimental condition. give() extracts various bits information powRICLPM object. exact information extracted given = \"...\" argument: = \"conditions\" gives different experimental conditions per row, condition defined unique combination sample size, number time points ICC. = \"estimation_problems\" gives proportion fatal errors, inadmissible values, non-converged estimations (columns) per experimental conditions (row). = \"results\" gives average estimate average, minimum estimate minimum, standard deviation parameter estimates SD, average standard error SEavg, mean square error MSE, average width confidence interval accuracy, coverage rate coverage, proportion times p-value lower significance criterion power. requires setting parameter = \"...\" argument. = \"names\" gives parameter names contained within powRICLPM object. Finally, plot() creates ggplot2-plot specific parameter (specified using parameter = \"...\" argument) sample size x-axis, simulated power y-axis, lines grouped number time-points, plots wrapped proportion -unit variance. plot() returns ggplot2 object can fully customized using ggplot2 functionality. example, can change scales, add titles, change geoms, etc. information options ggplot2 framework can found https://ggplot2-book.org/index.html. example, add title change labels x-axis:","code":"# Summary of study design summary(output)  # Summary of results for a specific parameter, across simulation conditions summary(output, parameter = \"wB2~wA1\")  # Summary of all parameter for a specific simulation condition summary(output, sample_size = 400, time_points = 4, ICC = 0.5) # Extract experimental conditions give(output, what = \"conditions\")  # Extract estimation problems give(output, what = \"estimation_problems\")  # Extract results for cross-lagged effect \"wB2~wA1\"  give(output, what = \"results\", parameter = \"wB2~wA1\")  # Extract parameter names give(output, what = \"names\") # Create basic plot of powRICLPM object p <- plot(output, parameter = \"wB2~wA1\") p  # Adjust plot aesthetics p2 <- p +    ggplot2::labs(     title = \"Power analysis for RI-CLPM\",     caption = \"Based on 1000 replications.\"   ) +   ggplot2::scale_x_continuous(     name = \"Sample size\",     breaks = seq(100, 1000, 100),     guide = ggplot2::guide_axis(n.dodge = 2)   ) p2"},{"path":[]},{"path":[]},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/start.html","id":"step-1-determine-experimental-conditions","dir":"Articles","previous_headings":"","what":"Step 1: Determine experimental conditions","title":"Get started","text":"performing power analysis, must first determine experimental conditions interest. Experimental conditions (: simulation conditions) defined characteristics study design can impact statistical power. includes, among others, characteristics like sample size number repeated measures. Decide number repeated measures used simulations, well range sample sizes want simulate power. example, take sample size range 100 1000 first, increasing steps 100. Let numbers repeated measures range 3 5. experimental conditions lead desired amount power detecting small cross-lagged effect, ranges can extended.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/start.html","id":"step-2-choose-population-parameter-values","dir":"Articles","previous_headings":"","what":"Step 2: Choose population parameter values","title":"Get started","text":"Next, determine population parameter values generating data RI-CLPM. requires specification : Phi: Standardized autoregressive cross-lagged effects within-unit components model. values collected matrix columns representing predictors rows representing outcomes. within_cor: correlation within-unit components. ICC: proportion variance -unit level (relative total variance). RI_cor: correlation random intercepts. example, parameter values set :","code":"Phi <- matrix(c(.4, .1, .2, .3), ncol = 2, byrow = T) # The .2 refers to our standardized cross-lagged effect of interest within_cor <- 0.3 ICC <- 0.5 RI_cor <- 0.3"},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/start.html","id":"steps-3-5-perform-the-power-analysis","dir":"Articles","previous_headings":"","what":"Steps 3-5: Perform the power analysis","title":"Get started","text":"Steps 3 5 automated powRICLPM() function. input, must provide: desired power level using target_power argument, range sample sizes simulate power using search_lower, search_upper, search_step arguments (alternatively, can specify directly providing vector sample sizes sample_size argument), number time points simulated data using time_points argument, population values Phi, within_cor, ICC, RI_cor, number Monte Carlo replications want perform per experimental condition reps argument. Optionally, can specify: skewness kurtosis: integer (vector) determines skewness kurtosis simulated observed variables, respectively. Suppose reason believe \\(\\) \\(B\\) variables positively skewed, heavy tails (.e., higher kurtosis) can include arguments skewness = 1 kurtosis = 0.5 (default: 0). alpha: numeric value denoting significance criterion (default: 0.05). seed: integer control starting point random number generator. important use want replicate results. reliability: numeric value representing reliability indicators (.e., proportion true score variance) (default: 1). bootstrap_reps: numeric value, denoting number bootstrap replications used simulate uncertainty around power analysis results (default: 1000). estimator: character string, denoting estimator used estimating models (default: “ML”; skewness /kurtosis values set nonzero values, defaults “MLR”). constraints, bounds, estimate_ME arguments can set well extend basic power analysis setup. options described Vignette Extensions. example, can perform power analysis running:","code":"output <- powRICLPM(   target_power = 0.8,   search_lower = 100,   search_upper = 1000,   search_step = 50,   time_points = c(3, 4, 5),   ICC = ICC,   RI_cor = RI_cor,    Phi = Phi,   within_cor = 0.3,   reps = 1000 )"},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/start.html","id":"parallel-processing-using-furrr","dir":"Articles","previous_headings":"Steps 3-5: Perform the power analysis","what":"Parallel processing using furrr","title":"Get started","text":"Performing Monte Carlo power analysis large number replications, across multiple simulation conditions can time-consuming. speed process, recommended perform power analysis across simulation conditions parallel (.e., multiple cores). powRICLPM() function implemented future’s parallel processing capabilities using furrr package. Load furrr package, use plan() function change power analysis execution sequential (.e., single-core, default), multisession (.e., multicore). Use workers argument specify many cores want use. Next, run powRICLPM analysis, power analysis run specified number cores. can result significant reduction computing time. information parallel execution strategies, see ?furrr::plan().","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/start.html","id":"progress-bar-using-progressr","dir":"Articles","previous_headings":"Steps 3-5: Perform the power analysis","what":"Progress bar using progressr","title":"Get started","text":"can useful get approximation progress powRICLPM analysis running code, especially running analysis parallel. powRICLPM() implemented progress notifications using progressr package. Simply put, two options can get progress notifications: can subscribe progress updates specific expression wrapping expression with_progress({...}). can subscribe progress updates everywhere running handlers(global = T). second option fully developed yet furrr package, instead focus first. Implementing with_progress({...}) option, well parallel execution powRICLPM analysis, results code example: information progress notification options using progressr end-users, including auditory email updates, see https://progressr.futureverse.org.","code":"# Load the furrr and progressr packages library(furrr) library(progressr)  # Check how many cores are available future::availableCores()  # Plan powRICLPM analysis to run on 1 core less than number of available cores plan(multisession, workers = 7) # For the case of 8 available cores  # Run the powRICLPM analysis  with_progress({ # Subscribe to progress updates   output <- powRICLPM(     target_power = 0.8,     search_lower = 100,     search_upper = 1000,     search_step = 50,     time_points = c(3, 4, 5),     ICC = ICC,     RI_cor = RI_cor,      Phi = Phi,     within_cor = 0.3,     reps = 1000   ) })  # Revert back to sequential execution of code  plan(sequential)"},{"path":"https://jeroendmulder.github.io/powRICLPM/articles/start.html","id":"step-6-summarize-results","dir":"Articles","previous_headings":"","what":"Step 6: Summarize results","title":"Get started","text":"powRICLPM() function creates powRICLPM object: list results, upon can call print(), summary(), give(), plot() functions print, summarize, extract results, visualize results, respectively. print() outputs textual summary power analysis design contained within object called upon. output performance metrics computed power analysis. summary() can used one four ways. First, summary can used simply like print() get information design power analysis (different experimental conditions), well number problems occurred per condition (e.g., non-convergence, fatal estimation errors, inadmissible results). Second, specifying parameter = \"...\" argument summary(), function print results specifically parameter across experimental conditions. Third, specify specific experimental condition using summary()’s sample_size, time_points, ICC arguments, performance measures outputted parameters experimental condition. give() extracts various bits information powRICLPM object. exact information extracted given = \"...\" argument: = \"conditions\" gives different experimental conditions per row, condition defined unique combination sample size, number time points ICC. = \"estimation_problems\" gives proportion fatal errors, inadmissible values, non-converged estimations (columns) per experimental conditions (row). = \"results\" gives average estimate average, minimum estimate minimum, standard deviation parameter estimates SD, average standard error SEavg, mean square error MSE, average width confidence interval accuracy, coverage rate coverage, proportion times p-value lower significance criterion power. requires setting parameter = \"...\" argument. = \"names\" gives parameter names contained within powRICLPM object. Finally, plot() creates ggplot2-plot specific parameter (specified using parameter = \"...\" argument) sample size x-axis, simulated power y-axis, lines grouped number time-points, plots wrapped proportion -unit variance. plot() returns ggplot2 object can fully customized using ggplot2 functionality. example, can change scales, add titles, change geoms, etc. information options ggplot2 framework can found https://ggplot2-book.org/index.html. example, add title change labels x-axis:","code":"# Summary of study design summary(output)  # Summary of results for a specific parameter, across simulation conditions summary(output, parameter = \"wB2~wA1\")  # Summary of all parameter for a specific simulation condition summary(output, sample_size = 400, time_points = 4, ICC = 0.5) # Extract experimental conditions give(output, what = \"conditions\")  # Extract estimation problems give(output, what = \"estimation_problems\")  # Extract results for cross-lagged effect \"wB2~wA1\"  give(output, what = \"results\", parameter = \"wB2~wA1\")  # Extract parameter names give(output, what = \"names\") # Create basic plot of powRICLPM object p <- plot(output, parameter = \"wB2~wA1\") p  # Adjust plot aesthetics p2 <- p +    ggplot2::labs(     title = \"Power analysis for RI-CLPM\",     caption = \"Based on 1000 replications.\"   ) +   ggplot2::scale_x_continuous(     name = \"Sample size\",     breaks = seq(100, 1000, 100),     guide = ggplot2::guide_axis(n.dodge = 2)   ) p2"},{"path":"https://jeroendmulder.github.io/powRICLPM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeroen Mulder. Author, maintainer, copyright holder. Netherlands Organization Scientific Research. Funder.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mulder, J.D. (2022). Power analysis random intercept cross-lagged panel model using powRICLPM R-package. Structural Equation Modeling: Multidisciplinary Journal. https://doi.org/10.1080/10705511.2022.2122467","code":"@Article{,   title = {Power analysis for the random intercept cross-lagged panel model using the powRICLPM R-package},   author = {{Jeroen D. Mulder}},   journal = {Structural Equation Modeling: A Multidisciplinary Journal},   year = {2022},   url = {https://doi.org/10.1080/10705511.2022.2122467}, }"},{"path":"https://jeroendmulder.github.io/powRICLPM/index.html","id":"powriclpm","dir":"","previous_headings":"","what":"Power Analysis for the RI-CLPM and STARTS Model","title":"Power Analysis for the RI-CLPM and STARTS Model","text":"powRICLPM R package aids researchers performing power analysis random intercept cross-lagged panel model (RI-CLPM) Hamaker, Kuiper, Grasman (2015), Stable Trait Autoregressive Trait State Model (STARTS) Kenny Zautra (1995) Kenny Zautra (2001). implements strategy proposed Mulder (2023). main functionalities include: Basic power analysis: Use Monte Carlo simulations compute power reject null-hypothesis (well performance measures bias, mean square error) parameters RI-CLPM STARTS, specific experimental condition. condition defined sample size, number repeated measures, proportion -unit variance, reliability indicators. powRICLPM can perform power analyses across multiple experimental conditions simultaneously, report results back user-friendly manner. Extensions: basic power analysis setup can extended include use bounded estimation, various (stationarity) constraints time parameters estimation model, generation nonnormal data, among things. Mplus: Mplus installed, powRICLPM can create Mplus syntax, run power analyses Mplus.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Power Analysis for the RI-CLPM and STARTS Model","text":"four sources documentation powRICLPM: rationale power analysis strategy underlying package can found Mulder (2023). Every user-facing function package documented, documentation can accessed running ?function_name R console (e.g., ?powRICLPM). , can find explanations use functions, well technical details. elaborate descriptions package’s functionality analysis options described vignettes. accessible via ‘Vignettes’ tab menu, via R using vignette(package = \"powRICLPM\"). FAQ contains answers frequently asked question reach via email.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Power Analysis for the RI-CLPM and STARTS Model","text":"install development version powRICLPM, including latest bug fixes new features, run: install latest release powRICLPM CRAN, run:","code":"install.packages(\"devtools\") devtools::install_github(\"jeroendmulder/powRICLPM\") install.packages(\"powRICLPM\")"},{"path":"https://jeroendmulder.github.io/powRICLPM/index.html","id":"citing-powriclpm","dir":"","previous_headings":"","what":"Citing powRICLPM","title":"Power Analysis for the RI-CLPM and STARTS Model","text":"can cite R-package following citation: Mulder, J.D., (2023). Power analysis random intercept cross-lagged panel model using powRICLPM R-package. Structural Equation Modeling: Multidisciplinary Journal, 30(4), 645-658. https://doi.org/10.1080/10705511.2022.2122467","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Power Analysis for the RI-CLPM and STARTS Model","text":"ideas, comments, issues like raise, please get touch. Issues ideas can raised GitHub via https://github.com/jeroendmulder/powRICLPM Pull request can created GitHub via https://github.com/jeroendmulder/powRICLPM/pulls","code":""},{"path":[]},{"path":"https://jeroendmulder.github.io/powRICLPM/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Jeroen D. Mulder Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/check_Phi.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Interpretation Phi Argument — check_Phi","title":"Check Interpretation Phi Argument — check_Phi","text":"Write textual interpretation values Phi. can used check Phi correctly specified.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/check_Phi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Interpretation Phi Argument — check_Phi","text":"","code":"check_Phi(Phi)"},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/check_Phi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Interpretation Phi Argument — check_Phi","text":"Phi matrix, standardized autoregressive effects (diagonal) cross-lagged effects (-diagonal) population. Columns represent predictors rows represent outcomes.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/check_Phi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Interpretation Phi Argument — check_Phi","text":"return value, called side effects.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/check_Phi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Interpretation Phi Argument — check_Phi","text":"","code":"# Correctly specified `Phi` Phi1 <- matrix(c(.4, .1, .2, .3), ncol = 2, byrow = TRUE) check_Phi(Phi1) #> According to this `Phi`, the lagged effects are: #> • Autoregressive effect of A: 0.4 #> • Autoregressive effect of B: 0.3 #> • Cross-lagged effect of A -> B: 0.2 #> • Cross-lagged effect of B -> A: 0.1  # `Phi` with too large standardized effects Phi2 <- matrix(c(.6, .5, .4, .7), ncol = 2, byrow = TRUE) Phi2 <- check_Phi(Phi2) #> According to this `Phi`, the lagged effects are: #> • Autoregressive effect of A: 0.6 #> • Autoregressive effect of B: 0.7 #> • Cross-lagged effect of A -> B: 0.4 #> • Cross-lagged effect of B -> A: 0.5 #>  #> However, lagged effects in `Phi` must specify a stationary process: #> ℹ This is checked by testing if the eigenvalues of `Phi` lie within unit circle. #> ✖ The eigenvalues of `Phi` are not within unit circle. Try out smaller lagged effects?"},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/give.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Information From powRICLPM Object — give","title":"Extract Information From powRICLPM Object — give","text":"Extract information stored within powRICLPM object (internally used print.powRICLPM summary.powRICLPM). See \"Details\" pieces information can extracted. information presented condition (.e., sample size, number time points, ICC).","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/give.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Information From powRICLPM Object — give","text":"","code":"give(from, what, parameter = NULL)"},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/give.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Information From powRICLPM Object — give","text":"powRICLPM object character string, denoting information extract, either \"conditions\", \"estimation_problems\", \"results\", \"names\". parameter (optional) = \"results\", character string denoting parameter extract results .","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/give.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Information From powRICLPM Object — give","text":"data.frame.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/give.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Information From powRICLPM Object — give","text":"following information can extracted powRICLPM object: conditions: data.frame different experimental conditions per row, condition defined unique combination sample size, number time points ICC. estimation_problems: proportion fatal errors, inadmissible values, non-converged estimations (columns) per experimental conditions (row). results: average estimate (average), minimum estimate (minimum), standard deviation parameter estimates (SD), average standard error (SEavg), mean square error (MSE), average width confidence interval (accuracy), coverage rate (coverage), proportion times p-value lower significance criterion (power). requires setting parameter = \"...\" argument. names: parameter names condition least parameters (.e., parameter names apply experimental condition).","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/give.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Information From powRICLPM Object — give","text":"","code":"# Return data frame with number of estimation problems per experimental condition give(out_preliminary, \"estimation_problems\") #>    sample_size time_points ICC reliability errors not_converged inadmissible #> 1          500           4 0.3         1.0      0             0            0 #> 2          700           4 0.3         1.0      0             0            0 #> 3          500           5 0.3         1.0      0             0            0 #> 4          700           5 0.3         1.0      0             0            0 #> 5          500           4 0.5         1.0      0             0            0 #> 6          700           4 0.5         1.0      0             0            0 #> 7          500           5 0.5         1.0      0             0            0 #> 8          700           5 0.5         1.0      0             0            0 #> 9          500           4 0.3         0.8      0             0            0 #> 10         700           4 0.3         0.8      0             0            0 #> 11         500           5 0.3         0.8      0             0            0 #> 12         700           5 0.3         0.8      0             0            0 #> 13         500           4 0.5         0.8      0             0            0 #> 14         700           4 0.5         0.8      0             0            0 #> 15         500           5 0.5         0.8      0             0            0 #> 16         700           5 0.5         0.8      0             0            0  # Return data frame with performance measures for \"wB2~wA1\" per experimental condition give(out_preliminary, \"results\", parameter = \"wB2~wA1\") #>    sample_size time_points ICC reliability population_value average   bias #> 1          500           4 0.3         1.0              0.1   0.101  0.001 #> 2          700           4 0.3         1.0              0.1   0.105  0.005 #> 3          500           5 0.3         1.0              0.1   0.102  0.002 #> 4          700           5 0.3         1.0              0.1   0.098 -0.002 #> 5          500           4 0.5         1.0              0.1   0.093 -0.007 #> 6          700           4 0.5         1.0              0.1   0.102  0.002 #> 7          500           5 0.5         1.0              0.1   0.093 -0.007 #> 8          700           5 0.5         1.0              0.1   0.099 -0.001 #> 9          500           4 0.3         0.8              0.1   0.092 -0.008 #> 10         700           4 0.3         0.8              0.1   0.072 -0.028 #> 11         500           5 0.3         0.8              0.1   0.091 -0.009 #> 12         700           5 0.3         0.8              0.1   0.083 -0.017 #> 13         500           4 0.5         0.8              0.1   0.078 -0.022 #> 14         700           4 0.5         0.8              0.1   0.074 -0.026 #> 15         500           5 0.5         0.8              0.1   0.084 -0.016 #> 16         700           5 0.5         0.8              0.1   0.077 -0.023 #>    minimum EmpSE SEAvg   MSE accuracy coverage power #> 1   -0.037 0.061 0.057 0.004    0.225     0.90  0.44 #> 2    0.011 0.048 0.049 0.002    0.192     0.98  0.58 #> 3   -0.036 0.057 0.054 0.003    0.213     0.94  0.50 #> 4    0.018 0.041 0.046 0.002    0.179     0.98  0.59 #> 5   -0.047 0.063 0.065 0.004    0.254     0.95  0.32 #> 6   -0.054 0.060 0.054 0.004    0.214     0.90  0.49 #> 7   -0.039 0.062 0.059 0.004    0.233     0.95  0.34 #> 8   -0.030 0.051 0.049 0.003    0.193     0.92  0.57 #> 9   -0.034 0.051 0.056 0.003    0.218     0.96  0.34 #> 10  -0.023 0.043 0.048 0.003    0.186     0.97  0.33 #> 11  -0.026 0.046 0.053 0.002    0.208     0.98  0.40 #> 12  -0.025 0.046 0.045 0.002    0.176     0.92  0.39 #> 13  -0.072 0.058 0.061 0.004    0.238     0.91  0.23 #> 14  -0.036 0.052 0.052 0.003    0.203     0.94  0.33 #> 15  -0.097 0.055 0.057 0.003    0.222     0.93  0.37 #> 16  -0.051 0.049 0.047 0.003    0.185     0.90  0.40  # Return character vector with parameter names give(out_preliminary, \"names\") #>  [1] \"RI_A~~RI_A\" \"RI_B~~RI_B\" \"RI_A~~RI_B\" \"wA2~wA1\"    \"wA2~wB1\"    #>  [6] \"wB2~wA1\"    \"wB2~wB1\"    \"wA3~wA2\"    \"wA3~wB2\"    \"wB3~wA2\"    #> [11] \"wB3~wB2\"    \"wA4~wA3\"    \"wA4~wB3\"    \"wB4~wA3\"    \"wB4~wB3\"    #> [16] \"wA1~~wA1\"   \"wB1~~wB1\"   \"wA1~~wB1\"   \"wA2~~wA2\"   \"wA3~~wA3\"   #> [21] \"wA4~~wA4\"   \"wB2~~wB2\"   \"wB3~~wB3\"   \"wB4~~wB4\"   \"wA2~~wB2\"   #> [26] \"wA3~~wB3\"   \"wA4~~wB4\""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/plot.powRICLPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Results From powRICLPM Object — plot.powRICLPM","title":"Plot Results From powRICLPM Object — plot.powRICLPM","text":"Visualizes (using ggplot2) results powRICLPM analysis, specific parameter, across experimental conditions. default, sample size plotted x-axis, power y-axis, results colored number time points, wrapped proportion -unit variance, shaped reliability. Optionally, variables can mapped y-axis, x-axis, color, shape, facets.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/plot.powRICLPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Results From powRICLPM Object — plot.powRICLPM","text":"","code":"# S3 method for class 'powRICLPM' plot(   x,   y = \"power\",   ...,   parameter = NULL,   color_by = \"time_points\",   shape_by = \"reliability\",   facet_by = \"ICC\" )"},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/plot.powRICLPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Results From powRICLPM Object — plot.powRICLPM","text":"x powRICLPM object. y (optional) character string, specifying outcome plotted y-axis (see \"Details\"). ... (use) parameter Character string length 1, denoting parameter visualize results . color_by Character string length 1, denoting variable map color (see \"Details\"). shape_by Character string length 1, denoting variable map point shapes (see \"Details\"). facet_by Character string length 1, denoting variable facet (see \"Details\").","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/plot.powRICLPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Results From powRICLPM Object — plot.powRICLPM","text":"ggplot2 object.","code":""},{"path":[]},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/plot.powRICLPM.html","id":"mapping-options","dir":"Reference","previous_headings":"","what":"Mapping Options","title":"Plot Results From powRICLPM Object — plot.powRICLPM","text":"following outcomes can plotted y-axis: average: average estimate. MSE: mean square error. coverage: coverage rate accuracy: average width confidence interval. SD: Standard deviation parameter estimates. SEAvg: Average standard error. bias: absolute difference average estimate population value. following variables can mapped color, shape, facet: sample_size: Sample size. time_points: Time points. ICC: Intraclass correlation (ICC). reliability: Item-reliablity.","code":""},{"path":[]},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/plot.powRICLPM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Results From powRICLPM Object — plot.powRICLPM","text":"","code":"# Visualize power for \"wB2~wA1\" across simulation conditions plot(out_preliminary, parameter = \"wB2~wA1\")    # Visualize bias for \"wB2~wA1\" across simulation conditions plot(out_preliminary, y = \"bias\", parameter = \"wB2~wA1\")    # Visualize coverage rate for \"wB2~wA1\" across simulation conditions plot(out_preliminary, y = \"coverage\", parameter = \"wB2~wA1\")    # Visualize MSE for autoregressive effect across simulation conditions plot(out_preliminary, y = \"MSE\", parameter = \"wA2~wA1\")    # Error: No parameter specified try(plot(out_preliminary)) #> Error in icheck_plot_parameter(parameter, x) :  #>   No `parameter` was specified: #> ℹ `plot()` needs to know which specific parameter to create a plot for."},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM-package.html","id":null,"dir":"Reference","previous_headings":"","what":"powRICLPM: Perform Power Analysis for the RI-CLPM and STARTS Model — powRICLPM-package","title":"powRICLPM: Perform Power Analysis for the RI-CLPM and STARTS Model — powRICLPM-package","text":"Perform user-friendly power analyses random intercept cross-lagged panel model (RI-CLPM) bivariate stable trait autoregressive trait state (STARTS) model. strategy proposed Mulder (2023) doi:10.1080/10705511.2022.2122467  implemented. Extensions include use parameter constraints time, bounded estimation, generation data skewness kurtosis, option setup power analysis Mplus.","code":""},{"path":[]},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"powRICLPM: Perform Power Analysis for the RI-CLPM and STARTS Model — powRICLPM-package","text":"Maintainer: Jeroen Mulder j.d.mulder@uu.nl (ORCID) [copyright holder] contributors: Netherlands Organization Scientific Research [funder]","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"Perform Monte Carlo power analysis random intercept cross-lagged panel model (RI-CLPM) stable trait autoregressive trait state model (STARTS). function computes performance metrics bias, mean square error, coverage, power, etc, model parameters, can perform power analyses across multiple experimental conditions simultaneously. Conditions defined terms sample size, number time points, proportion -unit variance (ICC), indicator reliability. See \"Details\" information () internal data simulation, (b) internal model estimation, (c) powRICLPM's naming conventions parameters, (d) parallel execution capabilities speeding analysis, (e) various extensions, option include measurement errors data generation estimation (.e., STARTS model), imposing various constraints time, many .","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"","code":"powRICLPM(   target_power = 0.8,   search_lower = NULL,   search_upper = NULL,   search_step = 20,   sample_size = NULL,   time_points,   ICC,   RI_cor,   Phi,   within_cor,   reliability = 1,   skewness = 0,   kurtosis = 0,   estimate_ME = FALSE,   significance_criterion = 0.05,   alpha = NULL,   reps = 20,   bootstrap_reps = NULL,   seed = NA,   constraints = \"none\",   bounds = FALSE,   estimator = \"ML\",   save_path = NULL,   software = \"lavaan\" )"},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"target_power numeric value 0 1, denoting targeted power level. search_lower positive integer, denoting lower bound range sample sizes. search_upper positive integer, denoting upper bound range sample sizes. search_step positive integer, denoting increment sample size. sample_size (optional) integer (vector), indicating specific sample sizes evaluate power, rather specifying range using search_* arguments. time_points integer (vector) elements least larger 3, indicating number time points. ICC double (vector) elements 0 1, denoting proportion (true score) variance -unit level. measurement error included data generating model, ICC computed variance random intercept factor divided true score variance (.e., controlled measurement error). RI_cor double 0 1, denoting correlation random intercepts. Phi matrix, standardized autoregressive effects (diagonal) cross-lagged effects (-diagonal) population. Columns represent predictors rows represent outcomes. within_cor double 0 1, denoting correlation within-unit components. reliability (optional) numeric vector elements 0 1, denoting reliability variables (see \"Details\"). skewness (optional) numeric, denoting skewness values observed variables (see simulateData). kurtosis (optional) numeric value, denoting excess kurtosis values (.e., compared kurtosis normal distribution) observed variables (see simulateData). estimate_ME (optional) logical, denoting measurement error variance estimated RI-CLPM (see \"Details\"). significance_criterion (optional) double, denoting significance criterion. alpha (use) Deprecated, use significance_criterion instead. reps positive integer, denoting number Monte Carlo replications used simulations. bootstrap_reps (superseded) Uncertainty regarding simulation estimates now computed analytically based Morris et al. (2017). argument used anymore. seed integer length 1. multiple cores used, seed used generate full L'Ecuyer-CMRG seed cores. constraints (optional) character string, specifying type constraints imposed estimation model (see \"Details\"). bounds (optional) logical, denoting bounded estimation used latent variable variances model (see \"Details\"). estimator (options) character string length 1, denoting estimator used (default: ML, see \"Details\"). save_path character string length 1, naming directory save (data) files (used validation purposes package). Variables saved alphabetical numerical order. software character string length, naming software use simulations; either \"lavaan\" \"Mplus\" (see \"Details\").","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"object class powRICLPM, upon summary(), print(), plot() can used. returned object list conditions session element. condition list experimental conditions, element list containing input output power analysis particular experimental condition. session list containing information common experimental conditions.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"rationale power analysis strategy implemented package can found Mulder (2023).","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"data-generation","dir":"Reference","previous_headings":"","what":"Data Generation","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"Data generated using simulateData lavaan package. Based Phi within_cor, residual variances covariances within-components wave 2 later computed, within-components variance 1. implies lagged effects Phi can interpreted standardized effects.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"model-estimation-using-lavaan","dir":"Reference","previous_headings":"","what":"Model Estimation using lavaan","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"software = \"lavaan\" (default), generated data analyzed using lavaan lavaan package. default estimator maximum likelihood (ML). maximum likelihood based estimators implemented lavaan can specified well. skewed kurtosed data generated (using skewness kurtosis arguments), estimator defaults robust maximum likelihood MLR. population parameter values used starting values. Parameter estimates non-converged model solutions discarded results. bounds = FALSE, inadmissible parameter estimates converged solutions (e.g., negative random intercept variance) discarded. bounds = TRUE, inadmissible parameter estimates retained following advice De Jonckere Rosseel (2022). results include minimum estimates parameters across replications diagnose parameter(s) might cause inadmissible solution.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"using-mplus","dir":"Reference","previous_headings":"","what":"Using Mplus","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"software = \"Mplus\", Mplus input files generated saved save_path. Note possible generate skewed kurtosed data Mplus via powRICLPM package. Furthermore, bounded estimation available Mplus. Therefore, skewness, kurtosis, bounds ignored software = \"Mplus\".","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"naming-conventions-observed-and-latent-variables","dir":"Reference","previous_headings":"","what":"Naming Conventions Observed and Latent Variables","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"observed variables RI-CLPM given default names, namely capital letters alphabetical order, numbers denoting measurement occasion. example, bivariate RICLPM 3 time points, observe A1, A2, A3, B1, B2, B3. within-components denoted wA1, wA2, ..., wB3, respectively. -components RI_ prepended variable name, resulting RI_A RI_B. Parameters denoted using lavaan model syntax (see lavaan website). example, random intercept variances denoted RI_A~~RI_A RI_B~~RI_B, cross-lagged effects first wave wB2~wA1 wA2~wB1, autoregressive effects wA2~wA1 wB2~wB1. Use give(object, \"names\") extract parameter names powRICLPM object.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"parallel-processing-and-progress-bar","dir":"Reference","previous_headings":"","what":"Parallel Processing and Progress Bar","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"speed analysis, power analysis multiple experimental conditions can executed parallel. implemented using future. default analysis executed sequentially (.e., single-core). Parallel execution (.e., multicore) can setup using plan, example plan(multisession, workers = 4). information options, see https://future.futureverse.org/articles/future-1-overview.html#controlling--futures--resolved. progress bar displaying status power analysis implemented using progressr. default, simple progress bar shown. information control progress bar several notification options (e.g., auditory notifications), see https://progressr.futureverse.org.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"extension-measurement-errors-starts-model-","dir":"Reference","previous_headings":"","what":"Extension: Measurement Errors (STARTS model)","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"Including measurement error RI-CLPM makes model equivalent bivariate STARTS model Kenny Zautra (2001) without constraints time. Measurement error can added generated data reliability argument. Setting reliability-argument 0.8 implies 80 percent true score variance, 20 measurement error variance. ICC denotes proportion true score variance captured random intercept factors. Estimating measurement errors (.e., STARTS model) done setting estimate_ME = TRUE.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"extension-imposing-constraints","dir":"Reference","previous_headings":"","what":"Extension: Imposing Constraints","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"following constraints can imposed estimation model using constraints = \"...\" argument: lagged: Time-invariant autoregressive cross-lagged effects. residuals: Time-invariant residual variances. within: Time-invariant lagged effects residual variances. stationarity: Constraints within-unit level stationary process estimated. included time-invariant lagged effects, constraints residual variances. : Time-invariant measurement error variances. possible estimate_ME = TRUE.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"extension-bounded-estimation","dir":"Reference","previous_headings":"","what":"Extension: Bounded Estimation","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"Bounded estimation useful avoid nonconvergence small samples. , automatic wide bounds used advised De Jonckere Rosseel (2022), see optim.bounds lavOptions. option can used constraints imposed estimation model.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"De Jonckere, J., & Rosseel, Y. (2022). Using bounded estimation avoid nonconvergence small sample structural equation modeling. Structural Equation Modeling, 29(3), 412-427. doi:10.1080/10705511.2021.1982716 Kenny, D. ., & Zautra, . (2001). Trait–state models longitudinal data. New methods analysis change (pp. 243–263). American Psychological Association. doi:10.1037/10409-008 Mulder, J. D. (2022). Power analysis random intercept cross-lagged panel model using powRICLPM R-package. Structural Equation Modeling. doi:10.1080/10705511.2022.2122467","code":""},{"path":[]},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"Jeroen D. Mulder j.d.mulder@uu.nl","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Power analysis for the RI-CLPM (and STARTS model) — powRICLPM","text":"","code":"# Define population parameters for lagged effects Phi <- matrix(c(.4, .1, .2, .3), ncol = 2, byrow = TRUE)  # (optional) Set up parallel computing (i.e., multicore, speeding up the analysis) library(future) library(progressr) future::plan(multisession, workers = 6)  # \\donttest{ # Run analysis (`reps` is small, because this is an example) with_progress({   out_preliminary <- powRICLPM(     target_power = 0.8,     search_lower = 500,     search_upper = 700,     search_step = 100,     time_points = c(3, 4),     ICC = c(0.4, 0.6),     reliability = c(1, 0.8),     RI_cor = 0.3,     Phi = Phi,     within_cor = 0.3,     reps = 100,     seed = 1234   ) }) #>  #> ── Checking Argument Input ── #>  #> ✔ Argument checking complete. #>  #> ── Performing Simulations Using lavaan ── #>  #> Warning: lavaan->lav_object_post_check():   #>    covariance matrix of latent variables is not positive definite ; use  #>    lavInspect(fit, \"cov.lv\") to investigate. #> ✔ Simulations complete. # }"},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM_Mplus.html","id":null,"dir":"Reference","previous_headings":"","what":"(superseded) Create Mplus Syntax for RI-CLPM Power Analysis — powRICLPM_Mplus","title":"(superseded) Create Mplus Syntax for RI-CLPM Power Analysis — powRICLPM_Mplus","text":"function powRICLPM_Mplus superseded longer available current version package.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM_Mplus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(superseded) Create Mplus Syntax for RI-CLPM Power Analysis — powRICLPM_Mplus","text":"","code":"powRICLPM_Mplus(...)"},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM_Mplus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(superseded) Create Mplus Syntax for RI-CLPM Power Analysis — powRICLPM_Mplus","text":"... (use)","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM_Mplus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(superseded) Create Mplus Syntax for RI-CLPM Power Analysis — powRICLPM_Mplus","text":"functionality previously provided powRICLPM_Mplus replaced powRICLPM, can now set software = \"Mplus\".","code":""},{"path":[]},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/powRICLPM_Mplus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(superseded) Create Mplus Syntax for RI-CLPM Power Analysis — powRICLPM_Mplus","text":"","code":"if (FALSE) { # \\dontrun{   # Use `software = \"Mplus\"` to setup power analysis for Mplus   out_preliminary <- powRICLPM(     target_power = 0.8,     search_lower = 500,     search_upper = 700,     search_step = 100,     time_points = c(3, 4),     ICC = c(0.4, 0.6),     reliability = c(1, 0.8),     RI_cor = 0.3,     Phi = Phi,     within_cor = 0.3,     reps = 1000,     seed = 1234,     software = \"Mplus\"   ) } # }"},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/print.powRICLPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Print powRICLPM Object — print.powRICLPM","title":"Print powRICLPM Object — print.powRICLPM","text":"print.powRICLPM prints table listing experimental conditions contained powRICLPM object, well frequency estimation problems occurred .","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/print.powRICLPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print powRICLPM Object — print.powRICLPM","text":"","code":"# S3 method for class 'powRICLPM' print(x, ...)"},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/print.powRICLPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print powRICLPM Object — print.powRICLPM","text":"x powRICLPM object. ... (use)","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/print.powRICLPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print powRICLPM Object — print.powRICLPM","text":"return value, called side effects.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/summary.powRICLPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Results from powRICLPM Object — summary.powRICLPM","title":"Summarize Results from powRICLPM Object — summary.powRICLPM","text":"S3 method class powRICLPM. summary.powRICLPM summarizes setup results powRICLPM analysis. Depending arguments set, summary.powRICLPM provides different summary (see \"Details\").","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/summary.powRICLPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Results from powRICLPM Object — summary.powRICLPM","text":"","code":"# S3 method for class 'powRICLPM' summary(   object,   ...,   parameter = NULL,   sample_size = NULL,   time_points = NULL,   ICC = NULL,   reliability = NULL )"},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/summary.powRICLPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Results from powRICLPM Object — summary.powRICLPM","text":"object powRICLPM object. ... (use) parameter Character string length 1 denoting parameter visualize results . sample_size (optional) integer, denoting sample size experimental condition interest. time_points (optional) integer, denoting number time points experimental condition interest. ICC (optional) double, denoting proportion variance -unit level experimental condition interest. reliability (optional) integer, denoting reliability indicators experimental condition interest.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/summary.powRICLPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Results from powRICLPM Object — summary.powRICLPM","text":"return value, called side effects.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/summary.powRICLPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize Results from powRICLPM Object — summary.powRICLPM","text":"summary.powRICLPM provides different summary powRICLPM object, depending additional arguments set: sample_size = ..., time_points = ..., ICC = ..., reliability set: Estimation information results parameters across experimental conditions. parameter = \"...\" set: Estimation information results specific parameter across experimental conditions. additional arguments: Characteristics different experimental conditions summarized, well session info (information applies conditions, number replications, etc.).","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/reference/summary.powRICLPM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Results from powRICLPM Object — summary.powRICLPM","text":"","code":"# Get setup of powRICLPM analysis and convergence issues summary(out_preliminary) #> powRICLPM (0.2.0) simulated power for 16 experimental conditions. #>  #>  #> Table: SUMMARY OF ANALYSIS PER EXPERIMENTAL CONDITION #>  #>  Sample size   Time points   ICC   Reliability   Error   Not converged   Inadmissible #> ------------  ------------  ----  ------------  ------  --------------  ------------- #>          500             4   0.3           1.0       0               0              0 #>          700             4   0.3           1.0       0               0              0 #>          500             5   0.3           1.0       0               0              0 #>          700             5   0.3           1.0       0               0              0 #>          500             4   0.5           1.0       0               0              0 #>          700             4   0.5           1.0       0               0              0 #>          500             5   0.5           1.0       0               0              0 #>          700             5   0.5           1.0       0               0              0 #>          500             4   0.3           0.8       0               0              0 #>          700             4   0.3           0.8       0               0              0 #>          500             5   0.3           0.8       0               0              0 #>          700             5   0.3           0.8       0               0              0 #>          500             4   0.5           0.8       0               0              0 #>          700             4   0.5           0.8       0               0              0 #>          500             5   0.5           0.8       0               0              0 #>          700             5   0.5           0.8       0               0              0  # Performance measures for \"wB2~wA1\" parameter across experimental conditions summary(out_preliminary, parameter = \"wB2~wA1\") #>  #>  #> Table: SIMULATION RESULTS FOR wB2~wA1 #>  #>  Sample size   Time points   ICC   Reliability   Population     Avg      Min       SD   SE Avg     MSE   Accuracy   Cover   Power   Error   Not converged   Inadmissible   NA #> ------------  ------------  ----  ------------  -----------  ------  -------  -------  -------  ------  ---------  ------  ------  ------  --------------  -------------  --- #>          500             4   0.3           0.8          0.1   0.092   -0.008   -0.034    0.051   0.056      0.003   0.218    0.96    0.34               0              0    0 #>          500             4   0.3           1.0          0.1   0.101    0.001   -0.037    0.061   0.057      0.004   0.225    0.90    0.44               0              0    0 #>          500             4   0.5           0.8          0.1   0.078   -0.022   -0.072    0.058   0.061      0.004   0.238    0.91    0.23               0              0    0 #>          500             4   0.5           1.0          0.1   0.093   -0.007   -0.047    0.063   0.065      0.004   0.254    0.95    0.32               0              0    0 #>          500             5   0.3           0.8          0.1   0.091   -0.009   -0.026    0.046   0.053      0.002   0.208    0.98    0.40               0              0    0 #>          500             5   0.3           1.0          0.1   0.102    0.002   -0.036    0.057   0.054      0.003   0.213    0.94    0.50               0              0    0 #>          500             5   0.5           0.8          0.1   0.084   -0.016   -0.097    0.055   0.057      0.003   0.222    0.93    0.37               0              0    0 #>          500             5   0.5           1.0          0.1   0.093   -0.007   -0.039    0.062   0.059      0.004   0.233    0.95    0.34               0              0    0 #>          700             4   0.3           0.8          0.1   0.072   -0.028   -0.023    0.043   0.048      0.003   0.186    0.97    0.33               0              0    0 #>          700             4   0.3           1.0          0.1   0.105    0.005    0.011    0.048   0.049      0.002   0.192    0.98    0.58               0              0    0 #>          700             4   0.5           0.8          0.1   0.074   -0.026   -0.036    0.052   0.052      0.003   0.203    0.94    0.33               0              0    0 #>          700             4   0.5           1.0          0.1   0.102    0.002   -0.054    0.060   0.054      0.004   0.214    0.90    0.49               0              0    0 #>          700             5   0.3           0.8          0.1   0.083   -0.017   -0.025    0.046   0.045      0.002   0.176    0.92    0.39               0              0    0 #>          700             5   0.3           1.0          0.1   0.098   -0.002    0.018    0.041   0.046      0.002   0.179    0.98    0.59               0              0    0 #>          700             5   0.5           0.8          0.1   0.077   -0.023   -0.051    0.049   0.047      0.003   0.185    0.90    0.40               0              0    0 #>          700             5   0.5           1.0          0.1   0.099   -0.001   -0.030    0.051   0.049      0.003   0.193    0.92    0.57               0              0    0  # Performance measures for all parameters, for specific experimental condition summary(out_preliminary, sample_size = 700, time_points = 4, ICC = .3, reliability = 1) #>  #>  #>  #> Table: SUMMARY OF ANALYSIS #>  #>                         Number of replications  #> ----------------------  ----------------------- #> Requested:              100                     #> Completed:              100                     #> Convergence issues:     0                       #> Inadmissible results:   0                       #>  #>  #>  #> Table: SUMMARY OF SIMULATION CONDITION #>  #>                                Value  #> -----------------------------  ------ #> Skewness:                      0      #> Kurtosis:                      0      #> Constraints:                   none   #> Bounds:                        FALSE  #> Estimated measurement error:   FALSE  #> Significance criterion:        0.05   #>  #>  #>  #> Table: SIMULATION RESULTS #>  #>              Population      Avg      Min       SD   SE Avg     MSE   Accuracy   Cover   Power  NA    #> -----------  -----------  ------  -------  -------  -------  ------  ---------  ------  ------  ----- #> RI_A~~RI_A   0.429         0.426   -0.003    0.261    0.058   0.055      0.003   0.217    0.97  1.00  #> RI_B~~RI_B   0.429         0.425   -0.003    0.269    0.071   0.062      0.005   0.243    0.89  1.00  #> RI_A~~RI_B   0.129         0.125   -0.004    0.012    0.055   0.045      0.003   0.178    0.89  0.69  #> wA2~wA1      0.200         0.200    0.000    0.051    0.060   0.054      0.004   0.210    0.94  0.94  #> wA2~wB1      0.150         0.150    0.000    0.017    0.053   0.051      0.003   0.200    0.93  0.85  #> wB2~wA1      0.100         0.105    0.005    0.011    0.048   0.049      0.002   0.192    0.98  0.58  #> wB2~wB1      0.300         0.299   -0.001    0.116    0.056   0.054      0.003   0.210    0.94  0.99  #> wA3~wA2      0.200         0.197   -0.003    0.013    0.055   0.054      0.003   0.213    0.97  0.95  #> wA3~wB2      0.150         0.160    0.010    0.020    0.054   0.052      0.003   0.205    0.93  0.85  #> wB3~wA2      0.100         0.101    0.001   -0.030    0.051   0.050      0.003   0.195    0.96  0.56  #> wB3~wB2      0.300         0.295   -0.005    0.139    0.063   0.056      0.004   0.218    0.92  1.00  #> wA4~wA3      0.200         0.196   -0.004    0.083    0.050   0.051      0.003   0.202    0.95  0.97  #> wA4~wB3      0.150         0.153    0.003    0.035    0.045   0.050      0.002   0.195    0.97  0.90  #> wB4~wA3      0.100         0.103    0.003   -0.018    0.048   0.047      0.002   0.185    0.94  0.56  #> wB4~wB3      0.300         0.302    0.002    0.176    0.053   0.051      0.003   0.199    0.92  1.00  #> wA1~~wA1     1.000         0.996   -0.004    0.844    0.081   0.074      0.006   0.288    0.90  1.00  #> wB1~~wB1     1.000         1.006    0.006    0.826    0.081   0.078      0.006   0.306    0.95  1.00  #> wA1~~wB1     0.300         0.302    0.002    0.174    0.063   0.057      0.004   0.224    0.92  1.00  #> wA2~~wA2     0.919         0.923    0.003    0.781    0.066   0.063      0.004   0.248    0.93  1.00  #> wA3~~wA3     0.919         0.918   -0.002    0.764    0.059   0.062      0.003   0.244    0.95  1.00  #> wA4~~wA4     0.919         0.915   -0.004    0.783    0.061   0.059      0.004   0.230    0.92  1.00  #> wB2~~wB2     0.882         0.872   -0.010    0.722    0.062   0.059      0.004   0.232    0.88  1.00  #> wB3~~wB3     0.882         0.892    0.010    0.763    0.057   0.059      0.003   0.233    0.98  1.00  #> wB4~~wB4     0.882         0.869   -0.013    0.730    0.057   0.055      0.003   0.215    0.95  1.00  #> wA2~~wB2     0.212         0.214    0.001    0.104    0.046   0.044      0.002   0.173    0.95  1.00  #> wA3~~wB3     0.212         0.214    0.001    0.123    0.043   0.044      0.002   0.172    0.97  1.00  #> wA4~~wB4     0.212         0.213    0.001    0.090    0.041   0.041      0.002   0.161    0.95  1.00"},{"path":"https://jeroendmulder.github.io/powRICLPM/news/index.html","id":"powriclpm-020","dir":"Changelog","previous_headings":"","what":"powRICLPM 0.2.0","title":"powRICLPM 0.2.0","text":"CRAN release: 2024-09-25","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"powRICLPM 0.2.0","text":"function powRICLPM_Mplus superseded powRICLPM() users can now set argument software = \"Mplus\" use Mplus power analysis. old function removed version. bootstrap_reps argument powRICLPM now deprecated. Instead, Monte Carlo standard errors now based Morris et al. (2017), available performance measures. argument alpha superseded significance_criterion argument.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/news/index.html","id":"minor-improvements-and-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"powRICLPM 0.2.0","text":"reliability argument can now take vector reliabilities simulate performance metrics various levels item reliability. powRICLPM package now import packages dplyr purrr anymore. cli package now used error handling. Slight speed stability improvements using software = \"lavaan\". Analysis using lavaan now relies default lavTest settings. Setting lavTest tests = \"none\" lead errors computers.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/news/index.html","id":"powriclpm-011","dir":"Changelog","previous_headings":"","what":"powRICLPM 0.1.1","title":"powRICLPM 0.1.1","text":"CRAN release: 2023-02-07","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/news/index.html","id":"minor-improvements-and-fixes-0-1-1","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"powRICLPM 0.1.1","text":"Now includes check_Phi() function, users can use check specified Phi matrix lagged-effects intended. plot() now allows performance measures, bias, MSE, coverage, plotted y argument. Mistakes model syntax estimation model imposing stationarity constraints (using constraints = \"stationarity\") now corrected.","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/news/index.html","id":"powriclpm-010","dir":"Changelog","previous_headings":"","what":"powRICLPM 0.1.0","title":"powRICLPM 0.1.0","text":"CRAN release: 2022-10-07","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"powRICLPM 0.1.0","text":"powRICLPM can now save generated data sets specifying path save_dat argument","code":""},{"path":"https://jeroendmulder.github.io/powRICLPM/news/index.html","id":"minor-improvements-and-fixes-0-1-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"powRICLPM 0.1.0","text":"est_ME argument powRICLPM renamed estimate_ME. Internal model fitting using lavaan now skips certain checks speed process. wSigma argument powRICLPM replaced within_cor argument. Now, double denoting correlation within-components needs specified rather correlation matrix. default, powRICLPM now discards results Monte Carlo replications inadmissible parameter results, unless bounded estimation used (bounds = TRUE).","code":""}]
